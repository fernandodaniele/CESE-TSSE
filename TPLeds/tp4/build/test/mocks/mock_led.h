/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LED_H
#define _MOCK_LED_H

#include "unity.h"
#include "led.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_led_Init(void);
void mock_led_Destroy(void);
void mock_led_Verify(void);




#define prenderLed_Ignore() prenderLed_CMockIgnore()
void prenderLed_CMockIgnore(void);
#define prenderLed_StopIgnore() prenderLed_CMockStopIgnore()
void prenderLed_CMockStopIgnore(void);
#define prenderLed_Expect(letra) prenderLed_CMockExpect(__LINE__, letra)
void prenderLed_CMockExpect(UNITY_LINE_TYPE cmock_line, char letra);
typedef void (* CMOCK_prenderLed_CALLBACK)(char letra, int cmock_num_calls);
void prenderLed_AddCallback(CMOCK_prenderLed_CALLBACK Callback);
void prenderLed_Stub(CMOCK_prenderLed_CALLBACK Callback);
#define prenderLed_StubWithCallback prenderLed_Stub
#define apagarLed_Ignore() apagarLed_CMockIgnore()
void apagarLed_CMockIgnore(void);
#define apagarLed_StopIgnore() apagarLed_CMockStopIgnore()
void apagarLed_CMockStopIgnore(void);
#define apagarLed_Expect(letra) apagarLed_CMockExpect(__LINE__, letra)
void apagarLed_CMockExpect(UNITY_LINE_TYPE cmock_line, char letra);
typedef void (* CMOCK_apagarLed_CALLBACK)(char letra, int cmock_num_calls);
void apagarLed_AddCallback(CMOCK_apagarLed_CALLBACK Callback);
void apagarLed_Stub(CMOCK_apagarLed_CALLBACK Callback);
#define apagarLed_StubWithCallback apagarLed_Stub
#define invertirLed_Ignore() invertirLed_CMockIgnore()
void invertirLed_CMockIgnore(void);
#define invertirLed_StopIgnore() invertirLed_CMockStopIgnore()
void invertirLed_CMockStopIgnore(void);
#define invertirLed_Expect(letra) invertirLed_CMockExpect(__LINE__, letra)
void invertirLed_CMockExpect(UNITY_LINE_TYPE cmock_line, char letra);
typedef void (* CMOCK_invertirLed_CALLBACK)(char letra, int cmock_num_calls);
void invertirLed_AddCallback(CMOCK_invertirLed_CALLBACK Callback);
void invertirLed_Stub(CMOCK_invertirLed_CALLBACK Callback);
#define invertirLed_StubWithCallback invertirLed_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
